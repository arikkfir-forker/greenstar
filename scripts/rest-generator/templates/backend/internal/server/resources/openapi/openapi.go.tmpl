// Code generated by greenstar scripts; DO NOT EDIT.

package openapi

import (
	"embed"
	"github.com/arikkfir/greenstar/backend/internal/server/middleware"
	"github.com/arikkfir/greenstar/backend/internal/server/util"
	"github.com/arikkfir/greenstar/backend/internal/util/observability"
	"github.com/arikkfir/greenstar/backend/internal/util/tenant"
	"net/http"
)

//go:embed openapi.yaml
var openapiSpec embed.FS

type Server struct {}

func NewServer() *Server {
	return &Server{}
}

func (s *Server) Get(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	l := observability.GetLogger(ctx)

	tenantID := tenant.GetTenantID(ctx)
	if tenantID != "" {
		l = l.With("tenantID", tenantID)
	}

	data, err := openapiSpec.ReadFile("openapi.yaml")
	if err != nil {
		l.ErrorContext(ctx, "Failed reading OpenAPI specification file", "err", err)
		util.ServeError(w, r, err)
		return
	}

	w.Header().Set("Content-Type", "application/yaml")
	w.WriteHeader(http.StatusOK)
	if _, err := w.Write(data); err != nil {
		l.ErrorContext(ctx, "Failed serving OpenAPI specification file", "err", err)
	}
}

func (s *Server) Register(mux *http.ServeMux) {
	mux.Handle("/openapi.yaml", &middleware.Handlers{
		GET:  http.HandlerFunc(s.Get),
	})
}
